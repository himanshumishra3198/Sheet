name: Deploy the main app

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Debug
        run: echo "Workflow triggered"

      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up SSH key
        run: |
          echo -e "${{ secrets.SSH_PRIVATE_KEY }}" > ~/ssh_key
          chmod 700 ~/ssh_key

      - name: Deploy to droplet
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
          AUTH_GOOGLE_ID: ${{ secrets.AUTH_GOOGLE_ID }}
          AUTH_GOOGLE_SECRET: ${{ secrets.AUTH_GOOGLE_SECRET }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/ssh_key root@128.199.27.128 << EOF
          export DATABASE_URL='${DATABASE_URL}'
          export AUTH_SECRET='${AUTH_SECRET}'
          export AUTH_GOOGLE_ID='${AUTH_GOOGLE_ID}'
          export AUTH_GOOGLE_SECRET='${AUTH_GOOGLE_SECRET}'

          # Ensure Sheet directory exists and pull latest code
          if [ -d "/root/Sheet" ]; then
            echo "Repository exists. Pulling latest changes..."
            cd /root/Sheet
            git pull origin main
          else
            echo "Cloning repository..."
            git clone https://github.com/himanshumishra3198/Sheet.git /root/Sheet
            cd /root/Sheet
          fi

          # Write environment variables to .env and .env.local
          echo "DATABASE_URL=${DATABASE_URL}" > /root/Sheet/.env
          echo "AUTH_SECRET=${AUTH_SECRET}" > /root/Sheet/.env.local
          echo "AUTH_GOOGLE_ID=${AUTH_GOOGLE_ID}" >> /root/Sheet/.env.local
          echo "AUTH_GOOGLE_SECRET=${AUTH_GOOGLE_SECRET}" >> /root/Sheet/.env.local

          # Install dependencies and build the app
          npm install
          npx prisma migrate deploy
          npx prisma generate

          cd problems
          node filter.mjs
          cd ..

          npm run build || { echo "Build failed"; exit 1; }

          # Restart using PM2
          if pm2 list | grep -q "sheet-app"; then
            pm2 restart sheet-app
          else
            pm2 start npm --name "sheet-app" -- start --cwd /root/Sheet
          fi

          pm2 save
          EOF
