name: Deploy the main app

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Debug
        run: echo "Workflow triggered"

      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up SSH key
        run: |
          echo -e "${{ secrets.SSH_PRIVATE_KEY }}" > ~/ssh_key
          chmod 700 ~/ssh_key

      - name: Deploy to droplet
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          AUTH_GOOGLE_ID: ${{ secrets.AUTH_GOOGLE_ID }}
          AUTH_GOOGLE_SECRET: ${{ secrets.AUTH_GOOGLE_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/ssh_key root@128.199.27.128 << 'EOF'
          set -euo pipefail

          export NODE_ENV=production

          REPO_DIR="/root/Sheet"
          cd /root

          # Clone or update repo
          if [ -d "$REPO_DIR" ]; then
            echo "Repository exists. Pulling latest changes..."
            cd "$REPO_DIR"
            git reset --hard
            git clean -fd
            git pull origin main
          else
            echo "Cloning repository..."
            git clone https://github.com/himanshumishra3198/Sheet.git "$REPO_DIR"
            cd "$REPO_DIR"
          fi

          # Write .env.production
          cat > "$REPO_DIR/.env.production" <<ENV
          DATABASE_URL='${{ secrets.DATABASE_URL }}'
          AUTH_GOOGLE_ID='${{ secrets.AUTH_GOOGLE_ID }}'
          AUTH_GOOGLE_SECRET='${{ secrets.AUTH_GOOGLE_SECRET }}'
          NEXTAUTH_URL='${{ secrets.NEXTAUTH_URL }}'
          AUTH_SECRET='${{ secrets.AUTH_SECRET }}'
          ENV

          # Write PM2 ecosystem config
          cat > "$REPO_DIR/ecosystem.config.js" <<CONFIG
          module.exports = {
            apps: [
              {
                name: "sheet-app",
                script: "npm",
                args: "start",
                env_production: {
                  NODE_ENV: "production",
                  DATABASE_URL: "${DATABASE_URL}",
                  AUTH_GOOGLE_ID: "${AUTH_GOOGLE_ID}",
                  AUTH_GOOGLE_SECRET: "${AUTH_GOOGLE_SECRET}",
                  NEXTAUTH_URL: "${NEXTAUTH_URL}",
                  AUTH_SECRET: "${AUTH_SECRET}"
                }
              }
            ]
          };
          CONFIG

          cd "$REPO_DIR"

          # Install dependencies
          npm ci --omit=dev

          echo "==> Running Prisma Migrate"
          npx prisma migrate deploy

          echo "==> Generating Prisma Client"
          npx prisma generate

          echo "==> Running problems filter"
          cd problems
          node filter.mjs
          cd ..

          echo "==> Building Next.js App"
          npm run build

          echo "==> Starting app with PM2"
          pm2 delete sheet-app || true
          pm2 start ecosystem.config.js --env production
          pm2 save
          pm2 startup
          EOF
