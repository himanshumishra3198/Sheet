name: Deploy Production App

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Configure SSH
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 128.199.27.128 >> ~/.ssh/known_hosts

      - name: Deploy to Production
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          AUTH_GOOGLE_ID: ${{ secrets.AUTH_GOOGLE_ID }}
          AUTH_GOOGLE_SECRET: ${{ secrets.AUTH_GOOGLE_SECRET }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
        run: |
          ssh root@128.199.27.128 << 'DEPLOY_EOF'
          set -euo pipefail

          # Setup environment
          export NODE_ENV=production
          REPO_DIR="/root/Sheet"
          ENV_FILE="$REPO_DIR/.env.production"

          # Clone or update repository
          if [ -d "$REPO_DIR" ]; then
            echo "Updating existing repository..."
            cd "$REPO_DIR"
            git reset --hard
            git clean -fd
            git pull origin main
          else
            echo "Cloning new repository..."
            git clone https://github.com/himanshumishra3198/Sheet.git "$REPO_DIR"
            cd "$REPO_DIR"
          fi

          # Create production environment file
          cat > "$ENV_FILE" <<ENV_EOF
          DATABASE_URL='$DATABASE_URL'
          AUTH_GOOGLE_ID='$AUTH_GOOGLE_ID'
          AUTH_GOOGLE_SECRET='$AUTH_GOOGLE_SECRET'
          NEXTAUTH_URL='$NEXTAUTH_URL'
          AUTH_SECRET='$AUTH_SECRET'
          ENV_EOF

          # Set strict permissions
          chmod 600 "$ENV_FILE"
          chown root:root "$ENV_FILE"

          # Install dependencies
          npm ci --omit=dev
          npx prisma migrate deploy
          npx prisma generate

          # Process problems data
          cd problems
          node filter.mjs
          cd ..

          # Build application
          npm run build

          # PM2 process management
          if pm2 list | grep -q sheet-app; then
            pm2 reload sheet-app --update-env
          else
            pm2 start npm --name "sheet-app" -- start
          fi

          pm2 save
          pm2 startup
          DEPLOY_EOF
